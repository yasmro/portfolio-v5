{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/YuOhno/portfoliov5/pages/works/index.js\",\n    _this = this;\n\nimport Link from \"next/link\";\nimport { getAllPosts } from '../../lib';\nimport { Paper } from '@material-ui/core';\nimport fetch from \"isomorphic-unfetch\";\n\nvar Index = function Index(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [props.shows ? props.shows.map(function (show, idx) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/works/[id]\",\n            as: \"/works/\".concat(show.fields.slug),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: show.fields.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }, _this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, _this);\n      }) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"null\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 18\n      }, _this), props.shows ? props.shows.map(function (show, idx) {\n        return /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/works/[id]\",\n            as: \"/works/\".concat(show.fields.slug),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: show.fields.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, _this);\n      }) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"null\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 18\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return getAllPosts();\n\n        case 2:\n          res = _context.sent;\n          console.log(res); // console.log(`Show data fetched. Count: ${data.length}`);\n\n          return _context.abrupt(\"return\", {\n            shows: res\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/YuOhno/portfoliov5/pages/works/index.js"],"names":["Link","getAllPosts","Paper","fetch","Index","props","console","log","shows","map","show","idx","fields","slug","title","getInitialProps","res"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,SAAQC,KAAR,QAAoB,mBAApB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA,iBACCA,KAAK,CAACG,KAAN,GACGH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAOC,GAAP;AAAA,4BAChB;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,aAAX;AAAyB,YAAA,EAAE,mBAAYD,IAAI,CAACE,MAAL,CAAYC,IAAxB,CAA3B;AAAA,mCACI;AAAA,wBAAIH,IAAI,CAACE,MAAL,CAAYE;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,WAASH,GAAT;AAAA;AAAA;AAAA;AAAA,iBADgB;AAAA,OAAhB,CADH,gBAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARL,EAUCN,KAAK,CAACG,KAAN,GACGH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAOC,GAAP;AAAA,4BAChB,QAAC,KAAD;AAAO,UAAA,SAAS,EAAE,CAAlB;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,aAAX;AAAyB,YAAA,EAAE,mBAAYD,IAAI,CAACE,MAAL,CAAYC,IAAxB,CAA3B;AAAA,mCACI;AAAA,wBAAIH,IAAI,CAACE,MAAL,CAAYE;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBADgB;AAAA,OAAhB,CADH,gBAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBL;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAyBH,CA3BD;;KAAMV,K;AA6BNA,KAAK,CAACW,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFd,WAAW,EADT;;AAAA;AACde,UAAAA,GADc;AAEpBV,UAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ,EAFoB,CAGpB;;AAHoB,2CAKb;AAACR,YAAAA,KAAK,EAAEQ;AAAR,WALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAQA,eAAeZ,KAAf","sourcesContent":["import Link from \"next/link\";\nimport { getAllPosts } from '../../lib'\n\nimport {Paper} from '@material-ui/core'\n\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = (props) => {\n    console.log(props)\n    return(\n        <div>\n            <h1>Works</h1>\n            <ul>\n            {props.shows ? \n                props.shows.map((show, idx) => (\n                <li key={idx}>\n                    <Link href=\"/works/[id]\" as={`/works/${show.fields.slug}`}>\n                        <a>{show.fields.title}</a>\n                    </Link>\n                </li>\n            )) : <h1>null</h1>}\n\n            {props.shows ? \n                props.shows.map((show, idx) => (\n                <Paper elevation={3}>\n                    <Link href=\"/works/[id]\" as={`/works/${show.fields.slug}`}>\n                        <a>{show.fields.title}</a>\n                    </Link>\n                </Paper>\n            )) : <h1>null</h1>}\n            \n            </ul>\n        </div>\n    )\n};\n\nIndex.getInitialProps = async function() {\n    const res = await getAllPosts();\n    console.log(res)\n    // console.log(`Show data fetched. Count: ${data.length}`);\n\n    return {shows: res};\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}