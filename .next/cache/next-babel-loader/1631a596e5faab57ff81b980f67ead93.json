{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/YuOhno/portfoliov5/pages/index.js\",\n    _this = this;\n\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Index = function Index(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Batman TV Shows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.shows ? props.shows.map(function (show) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/shows/[id]\",\n            as: \"/shows/\".concat(show.id),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: show.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 21\n          }, _this)\n        }, show.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, _this);\n      }) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"nul\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 18\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/YuOhno/portfoliov5/pages/index.js"],"names":["Link","fetch","Index","props","console","log","shows","map","show","id","name","getInitialProps","res","json","data","length","entry"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA,gBACCA,KAAK,CAACG,KAAN,GACGH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,4BACpB;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,aAAX;AAAyB,YAAA,EAAE,mBAAYA,IAAI,CAACC,EAAjB,CAA3B;AAAA,mCACI;AAAA,wBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,WAASF,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,iBADoB;AAAA,OAApB,CADH,gBAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARL;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAeH,CAjBD;;KAAMP,K;AAmBNA,KAAK,CAACS,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFV,KAAK,CAAC,8CAAD,CADH;;AAAA;AACdW,UAAAA,GADc;AAAA;AAAA,iBAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdC,UAAAA,IAFc;AAGpBV,UAAAA,OAAO,CAACC,GAAR,qCAAyCS,IAAI,CAACC,MAA9C;AAHoB,2CAIb;AAAET,YAAAA,KAAK,EAAEQ,IAAI,CAACP,GAAL,CAAS,UAAAS,KAAK;AAAA,qBAAIA,KAAK,CAACR,IAAV;AAAA,aAAd;AAAT,WAJa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAOA,eAAeN,KAAf","sourcesContent":["import Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = (props) => {\n    console.log(props)\n    return(\n        <div>\n            <h1>Batman TV Shows</h1>\n            <ul>\n            {props.shows ? \n                props.shows.map(show => (\n                <li key={show.id}>\n                    <Link href=\"/shows/[id]\" as={`/shows/${show.id}`}>\n                        <a>{show.name}</a>\n                    </Link>\n                </li>\n            )) : <h1>nul</h1>}\n            </ul>\n        </div>\n    )\n};\n\nIndex.getInitialProps = async function() {\n    const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n    const data = await res.json();\n    console.log(`Show data fetched. Count: ${data.length}`);\n    return { shows: data.map(entry => entry.show) };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}