{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/YuOhno/portfoliov5/pages/index.js\";\nimport Link from \"next/link\";\nimport { getAllPosts } from '../lib';\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Batman TV Shows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.shows ? props.shows.map(show => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/shows/[id]\",\n          as: `/shows/${show.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: show.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, show.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"null\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\nIndex.getInitialProps = async function () {\n  console.log(process.env.REACT_APP_NEXT_PUBLIC_CONTENTFUL_SPACE_ID);\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\"); // const res = await getAllPosts();\n\n  const data = await res.json(); // console.log(`Show data fetched. Count: ${data.length}`);\n\n  console.log(data);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/YuOhno/portfoliov5/pages/index.js"],"names":["Link","getAllPosts","fetch","Index","props","shows","map","show","id","name","getInitialProps","console","log","process","env","REACT_APP_NEXT_PUBLIC_CONTENTFUL_SPACE_ID","res","data","json","entry"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACCA,KAAK,CAACC,KAAN,GACGD,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,iBACpB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,aAAX;AAAyB,UAAA,EAAE,EAAG,UAASA,IAAI,CAACC,EAAG,EAA/C;AAAA,iCACI;AAAA,sBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,SAASF,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,cADA,CADH,gBAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAhBD;;AAkBAL,KAAK,CAACO,eAAN,GAAwB,kBAAiB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,yCAAxB;AACA,QAAMC,GAAG,GAAG,MAAMd,KAAK,CAAC,8CAAD,CAAvB,CAFqC,CAGrC;;AACA,QAAMe,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB,CAJqC,CAKrC;;AAEAP,EAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACA,SAAO;AAAEZ,IAAAA,KAAK,EAAEY,IAAI,CAACX,GAAL,CAASa,KAAK,IAAIA,KAAK,CAACZ,IAAxB;AAAT,GAAP;AACH,CATD;;AAWA,eAAeJ,KAAf","sourcesContent":["import Link from \"next/link\";\nimport { getAllPosts } from '../lib'\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = (props) => {\n    return(\n        <div>\n            <h1>Batman TV Shows</h1>\n            <ul>\n            {props.shows ? \n                props.shows.map(show => (\n                <li key={show.id}>\n                    <Link href=\"/shows/[id]\" as={`/shows/${show.id}`}>\n                        <a>{show.name}</a>\n                    </Link>\n                </li>\n            )) : <h1>null</h1>}\n            </ul>\n        </div>\n    )\n};\n\nIndex.getInitialProps = async function() {\n    console.log(process.env.REACT_APP_NEXT_PUBLIC_CONTENTFUL_SPACE_ID)\n    const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\")\n    // const res = await getAllPosts();\n    const data = await res.json();\n    // console.log(`Show data fetched. Count: ${data.length}`);\n\n    console.log(data)\n    return { shows: data.map(entry => entry.show) };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}