{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/YuOhno/portfoliov5/pages/index.js\",\n    _this = this;\n\nimport Link from \"next/link\";\nimport { getAllPosts } from '../lib';\nimport fetch from \"isomorphic-unfetch\";\n\nvar Index = function Index(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Batman TV Shows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.shows ? props.shows.map(function (show, idx) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/shows/[id]\",\n            as: \"/shows/\".concat(idx),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: idx\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 21\n          }, _this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, _this);\n      }) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"null\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 18\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, res2;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(process.env.REACT_APP_NEXT_PUBLIC_CONTENTFUL_SPACE_ID);\n          _context.next = 3;\n          return fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return getAllPosts();\n\n        case 6:\n          res2 = _context.sent;\n          console.log(res2); // console.log(`Show data fetched. Count: ${data.length}`);\n\n          return _context.abrupt(\"return\", {\n            shows: res2\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/YuOhno/portfoliov5/pages/index.js"],"names":["Link","getAllPosts","fetch","Index","props","console","log","shows","map","show","idx","getInitialProps","process","env","REACT_APP_NEXT_PUBLIC_CONTENTFUL_SPACE_ID","res","res2"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA,gBACCA,KAAK,CAACG,KAAN,GACGH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAOC,GAAP;AAAA,4BAChB;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,aAAX;AAAyB,YAAA,EAAE,mBAAYA,GAAZ,CAA3B;AAAA,mCACA;AAAA,wBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ,WAASA,GAAT;AAAA;AAAA;AAAA;AAAA,iBADgB;AAAA,OAAhB,CADH,gBAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARL;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAeH,CAjBD;;KAAMP,K;AAmBNA,KAAK,CAACQ,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBN,UAAAA,OAAO,CAACC,GAAR,CAAYM,OAAO,CAACC,GAAR,CAAYC,yCAAxB;AADoB;AAAA,iBAEFZ,KAAK,CAAC,8CAAD,CAFH;;AAAA;AAEda,UAAAA,GAFc;AAAA;AAAA,iBAGDd,WAAW,EAHV;;AAAA;AAGde,UAAAA,IAHc;AAIpBX,UAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ,EAJoB,CAKpB;;AALoB,2CAOb;AAAET,YAAAA,KAAK,EAAES;AAAT,WAPa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAUA,eAAeb,KAAf","sourcesContent":["import Link from \"next/link\";\nimport { getAllPosts } from '../lib'\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = (props) => {\n    console.log(props)\n    return(\n        <div>\n            <h1>Batman TV Shows</h1>\n            <ul>\n            {props.shows ? \n                props.shows.map((show, idx) => (\n                <li key={idx}>\n                    <Link href=\"/shows/[id]\" as={`/shows/${idx}`}>\n                    <a>{idx}</a>\n                    </Link>\n                </li>\n            )) : <h1>null</h1>}\n            </ul>\n        </div>\n    )\n};\n\nIndex.getInitialProps = async function() {\n    console.log(process.env.REACT_APP_NEXT_PUBLIC_CONTENTFUL_SPACE_ID)\n    const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\")\n    const res2 = await getAllPosts();\n    console.log(res2)\n    // console.log(`Show data fetched. Count: ${data.length}`);\n\n    return { shows: res2};\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}