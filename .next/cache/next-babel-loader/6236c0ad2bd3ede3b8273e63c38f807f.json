{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/YuOhno/portfoliov5/pages/works/index.js\",\n    _this = this;\n\nimport Link from \"next/link\";\nimport { getAllPosts } from '../../lib';\nimport { Paper } from '@material-ui/core';\nimport fetch from \"isomorphic-unfetch\";\n\nvar Index = function Index(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: props.shows ? props.shows.map(function (show, idx) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            \"class\": \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              \"class\": \"bg-image hover-overlay ripple\",\n              \"data-ripple-color\": \"light\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://mdbootstrap.com/img/new/standard/nature/111.jpg\",\n                \"class\": \"img-fluid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/works/[id]\",\n                as: \"/works/\".concat(show.fields.slug),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  \"class\": \"mask\",\n                  Style: \"background-color: rgba(251, 251, 251, 0.15)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 29\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 25\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              \"class\": \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                \"class\": \"card-title\",\n                children: show.fields.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                \"class\": \"card-text\",\n                children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 25\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, _this);\n        }) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"null\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 18\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return getAllPosts();\n\n        case 2:\n          res = _context.sent;\n          console.log(res); // console.log(`Show data fetched. Count: ${data.length}`);\n\n          return _context.abrupt(\"return\", {\n            shows: res\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/YuOhno/portfoliov5/pages/works/index.js"],"names":["Link","getAllPosts","Paper","fetch","Index","props","shows","map","show","idx","fields","slug","title","getInitialProps","res","console","log"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,SAAQC,KAAR,QAAoB,mBAApB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrB,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBAGHA,KAAK,CAACC,KAAN,GACGD,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAOC,GAAP;AAAA,8BAGZ;AAAK,qBAAM,MAAX;AAAA,oCACI;AAAK,uBAAM,+BAAX;AAA2C,mCAAkB,OAA7D;AAAA,sCACA;AACI,gBAAA,GAAG,EAAC,yDADR;AAEI,yBAAM;AAFV;AAAA;AAAA;AAAA;AAAA,uBADA,eAKA,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAC,aAAX;AAAyB,gBAAA,EAAE,mBAAYD,IAAI,CAACE,MAAL,CAAYC,IAAxB,CAA3B;AAAA,uCACI;AAAK,2BAAM,MAAX;AAAkB,kBAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,uBALA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAUI;AAAK,uBAAM,WAAX;AAAA,sCACA;AAAI,yBAAM,YAAV;AAAA,0BAAwBH,IAAI,CAACE,MAAL,CAAYE;AAApC;AAAA;AAAA;AAAA;AAAA,uBADA,eAEA;AAAG,yBAAM,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHY;AAAA,SAAhB,CADH,gBAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAuCH,CAxCD;;KAAMR,K;AA0CNA,KAAK,CAACS,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFZ,WAAW,EADT;;AAAA;AACda,UAAAA,GADc;AAEpBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAFoB,CAGpB;;AAHoB,2CAKb;AAACR,YAAAA,KAAK,EAAEQ;AAAR,WALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAQA,eAAeV,KAAf","sourcesContent":["import Link from \"next/link\";\nimport { getAllPosts } from '../../lib'\n\nimport {Paper} from '@material-ui/core'\n\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = (props) => {\n    return(\n        <div>\n            <h1>Works</h1>\n            <div className=\"container\">\n                <div className=\"row\">\n\n            \n            {props.shows ? \n                props.shows.map((show, idx) => (\n                    \n                        \n                    <div class=\"card\">\n                        <div class=\"bg-image hover-overlay ripple\" data-ripple-color=\"light\">\n                        <img\n                            src=\"https://mdbootstrap.com/img/new/standard/nature/111.jpg\"\n                            class=\"img-fluid\"\n                        />\n                        <Link href=\"/works/[id]\" as={`/works/${show.fields.slug}`}>\n                            <div class=\"mask\" Style=\"background-color: rgba(251, 251, 251, 0.15)\"></div>\n                        </Link>\n                        </div>\n                        <div class=\"card-body\">\n                        <h5 class=\"card-title\">{show.fields.title}</h5>\n                        <p class=\"card-text\">\n                            Some quick example text to build on the card title and make up the bulk of the\n                            card's content.\n                        </p>\n                        \n                        </div>\n                    </div>\n                 \n                \n            )) : <h1>null</h1>}\n            \n            </div>\n            </div>\n            \n        </div>\n    )\n};\n\nIndex.getInitialProps = async function() {\n    const res = await getAllPosts();\n    console.log(res)\n    // console.log(`Show data fetched. Count: ${data.length}`);\n\n    return {shows: res};\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}