{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/YuOhno/portfoliov5/pages/works/[id].js\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport { getAllPosts, getPostBySlug } from '../../lib';\nimport ReactMarkdown from 'react-markdown';\n\nconst Post = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.show.fields.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n    children: props.show.fields.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), props.show.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n    src: props.show.image.medium\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 25\n  }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/works\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await getAllPosts();\n  const res2 = await getPostBySlug(id);\n  console.log(res2); // console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: res,\n    show: res2\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/YuOhno/portfoliov5/pages/works/[id].js"],"names":["fetch","Link","getAllPosts","getPostBySlug","ReactMarkdown","Post","props","show","fields","title","description","image","medium","getInitialProps","context","id","query","res","res2","console","log","shows"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,WAA3C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,IAAI,GAAGC,KAAK,iBAChB;AAAA,0BACE;AAAA,cAAKA,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBC;AAAvB;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,aAAD;AAAe,IAAA,QAAQ,EAAEH,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBE;AAA3C;AAAA;AAAA;AAAA;AAAA,UAFF,EAGGJ,KAAK,CAACC,IAAN,CAAWI,KAAX,gBAAmB;AAAK,IAAA,GAAG,EAAEL,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAnB,GAA2D,IAH9D,eAKE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UALF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAcAP,IAAI,CAACQ,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMf,WAAW,EAA7B;AACA,QAAMgB,IAAI,GAAG,MAAMf,aAAa,CAACY,EAAD,CAAhC;AACEI,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAJ2C,CAK3C;;AAEA,SAAO;AAAEG,IAAAA,KAAK,EAAEJ,GAAT;AAAcV,IAAAA,IAAI,EAAEW;AAApB,GAAP;AACH,CARD;;AAUA,eAAeb,IAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport { getAllPosts, getPostBySlug } from '../../lib'\nimport ReactMarkdown from 'react-markdown'\n\nconst Post = props => (\n  <div>\n    <h1>{props.show.fields.title}</h1>\n    <ReactMarkdown children={props.show.fields.description} />\n    {props.show.image ? <img src={props.show.image.medium} /> : null}\n\n    <div>\n      <Link href=\"/works\">\n        <a>Back</a>\n      </Link>\n    </div>\n  </div>\n);\n\nPost.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await getAllPosts();\n  const res2 = await getPostBySlug(id);\n    console.log(res2)\n    // console.log(`Show data fetched. Count: ${data.length}`);\n\n    return { shows: res, show: res2};\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}