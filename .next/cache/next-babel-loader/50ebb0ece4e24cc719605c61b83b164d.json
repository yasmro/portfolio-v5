{"ast":null,"code":"// set client\nconst client = require('contentful').createClient({\n  space: process.env.REACT_APP_NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.REACT_APP_NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n}); // get all posts\n\n\nexport async function getAllPosts() {\n  const entries = await client.getEntries({}); // content_type: \"post\",\n  // order: \"-fields.date\",\n\n  if (entries.items) {\n    return entries.items;\n  }\n\n  console.log(`Error getting Entries for ${contentType.name}.`);\n} // get a post by slug\n\nexport async function getPostBySlug(slug) {\n  const entries = await client.getEntries({\n    content_type: \"post\",\n    limit: 1,\n    \"fields.slug[in]\": slug\n  });\n\n  if (entries.items) {\n    return entries.items[0];\n  }\n\n  console.log(`Error getting Entries for ${contentType.name}.`);\n} // get more 3 latest posts\n\nexport async function getMorePosts(slug) {\n  const entries = await client.getEntries({\n    content_type: \"post\",\n    limit: 3,\n    order: \"-fields.date\",\n    \"fields.slug[nin]\": slug\n  });\n\n  if (entries.items) {\n    return entries.items;\n  }\n\n  console.log(`Error getting Entries for ${contentType.name}.`);\n}\n\nfunction parsePostSlug({\n  fields\n}) {\n  return {\n    slug: fields.slug\n  };\n}\n\nfunction parsePostSlugEntries(entries, cb = parsePostSlug) {\n  var _entries$items;\n\n  return entries === null || entries === void 0 ? void 0 : (_entries$items = entries.items) === null || _entries$items === void 0 ? void 0 : _entries$items.map(cb);\n} // get all slugs of posts\n\n\nexport async function getAllPostsWithSlug() {\n  const entries = await client.getEntries({\n    content_type: \"post\",\n    select: \"fields.slug\"\n  });\n  return parsePostSlugEntries(entries, post => post.fields);\n}","map":null,"metadata":{},"sourceType":"module"}