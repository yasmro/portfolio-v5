{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/YuOhno/portfoliov5/pages/works/[id].js\",\n    _this = this;\n\nimport fetch from \"isomorphic-unfetch\";\n\nvar Post = function Post(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.show.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.show.summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, _this), props.show.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.show.image.medium\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 25\n    }, _this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var id, res, show;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return fetch(\"https://api.tvmaze.com/shows/\".concat(id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            show = _context.sent;\n            console.log(\"Fetched show: \".concat(show.name));\n            return _context.abrupt(\"return\", {\n              show: show\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/YuOhno/portfoliov5/pages/works/[id].js"],"names":["fetch","Post","props","show","name","summary","image","medium","getInitialProps","context","id","query","res","json","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,sBAChB;AAAA,4BACE;AAAA,gBAAKA,KAAK,CAACC,IAAN,CAAWC;AAAhB;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,gBAAIF,KAAK,CAACC,IAAN,CAAWE;AAAf;AAAA;AAAA;AAAA;AAAA,aAFF,EAGGH,KAAK,CAACC,IAAN,CAAWG,KAAX,gBAAmB;AAAK,MAAA,GAAG,EAAEJ,KAAK,CAACC,IAAN,CAAWG,KAAX,CAAiBC;AAA3B;AAAA;AAAA;AAAA;AAAA,aAAnB,GAA2D,IAH9D;AAAA;AAAA;AAAA;AAAA;AAAA,WADgB;AAAA,CAAlB;;KAAMN,I;;AAQNA,IAAI,CAACO,eAAL;AAAA,sEAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,EADa,GACND,OAAO,CAACE,KADF,CACbD,EADa;AAAA;AAAA,mBAEHV,KAAK,wCAAiCU,EAAjC,EAFF;;AAAA;AAEfE,YAAAA,GAFe;AAAA;AAAA,mBAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGfV,YAAAA,IAHe;AAIrBW,YAAAA,OAAO,CAACC,GAAR,yBAA6BZ,IAAI,CAACC,IAAlC;AAJqB,6CAKd;AAAED,cAAAA,IAAI,EAAJA;AAAF,aALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeF,IAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\n\nconst Post = props => (\n  <div>\n    <h1>{props.show.name}</h1>\n    <p>{props.show.summary}</p>\n    {props.show.image ? <img src={props.show.image.medium} /> : null}\n  </div>\n);\n\nPost.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n  console.log(`Fetched show: ${show.name}`);\n  return { show };\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}